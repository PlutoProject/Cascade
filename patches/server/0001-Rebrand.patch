From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nostalfinals <yuu8583@proton.me>
Date: Tue, 17 Sep 2024 14:26:28 +0800
Subject: [PATCH] Rebrand


diff --git a/build.gradle.kts b/build.gradle.kts
index b053160ee0faa550569a8b2273e38f48567ddbc7..0b328e929a6211f43a376635f83497380bb2736e 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -13,7 +13,7 @@ configurations.named(log4jPlugins.compileClasspathConfigurationName) {
 val alsoShade: Configuration by configurations.creating
 
 dependencies {
-    implementation(project(":purpur-api")) // Pufferfish // Paper // Purpur
+    implementation(project(":cascade-api")) // Pufferfish // Paper // Purpur // cascade
     // Paper start
     implementation("org.jline:jline-terminal-jansi:3.21.0")
     implementation("net.minecrell:terminalconsoleappender:1.3.0")
@@ -103,19 +103,22 @@ tasks.jar {
         val gitBranch = git("rev-parse", "--abbrev-ref", "HEAD").getText().trim() // Paper
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
-            "Implementation-Title" to "Purpur", // Pufferfish // Purpur
+            "Implementation-Title" to "Cascade", // Pufferfish // Purpur // Cascade
             "Implementation-Version" to implementationVersion,
             "Implementation-Vendor" to date, // Paper
-            "Specification-Title" to "Purpur", // Pufferfish // Purpur
+            "Specification-Title" to "Cascade", // Pufferfish // Purpur // Cascade
             "Specification-Version" to project.version,
-            "Specification-Vendor" to "Purpur Team", // Pufferfish // Purpur
-            "Brand-Id" to "purpurmc:purpur", // Pufferfish // Purpur
-            "Brand-Name" to "Purpur", // Pufferfish // Purpur
+            "Specification-Vendor" to "PlutoProject", // Pufferfish // Purpur // Cascade
+            "Brand-Id" to "plutoproject:cascade", // Pufferfish // Purpur // Cascade
+            "Brand-Name" to "Cascade", // Pufferfish // Purpur // Cascade
             "Build-Number" to (build ?: ""),
             "Build-Time" to Instant.now().toString(),
             "Git-Branch" to gitBranch, // Paper
             "Git-Commit" to gitHash, // Paper
             "CraftBukkit-Package-Version" to paperweight.craftBukkitPackageVersion.get(), // Paper
+            // Cascade start - add attributes
+            "Cascade-Version" to "1.0-alpha",
+            // Cascade end - add attributes
         )
         for (tld in setOf("net", "com", "org")) {
             attributes("$tld/bukkit", "Sealed" to true)
diff --git a/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java b/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
index 6d36fc6d8e22d9b68dea3830f6ecc8763184c343..c64f9230e1b7e8cfa9268efb419d4476c736b1e0 100644
--- a/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
+++ b/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
@@ -30,13 +30,17 @@ import org.slf4j.Logger;
 import static net.kyori.adventure.text.Component.text;
 import static net.kyori.adventure.text.format.TextColor.color;
 
+// Cascade start
+import ink.pmc.cascade.Ctp;
+// Cascade end
+
 @DefaultQualifier(NonNull.class)
 public class PaperVersionFetcher implements VersionFetcher {
     private static final Logger LOGGER = LogUtils.getClassLogger();
     private static final int DISTANCE_ERROR = -1;
     private static final int DISTANCE_UNKNOWN = -2;
     // Purpur start
-    private static final String DOWNLOAD_PAGE = "https://purpurmc.org/downloads";
+    private static final String DOWNLOAD_PAGE = "https://github.com/PlutoProject/cascade"; // Cascade
     private static int distance = DISTANCE_UNKNOWN; public int distance() { return distance; }
     // Purpur end
 
@@ -50,9 +54,9 @@ public class PaperVersionFetcher implements VersionFetcher {
         final Component updateMessage;
         final ServerBuildInfo build = ServerBuildInfo.buildInfo();
         if (build.buildNumber().isEmpty() && build.gitCommit().isEmpty()) {
-            updateMessage = text("You are running a development version without access to version information", color(0xFF5300));
+            updateMessage = text("You are running a development version without access to version information", color(Ctp.MAROON)); // Cascade
         } else {
-            updateMessage = getUpdateStatusMessage("PurpurMC/Purpur", build); // Purpur
+            updateMessage = getUpdateStatusMessage("PlutoProject/cascade", build); // Purpur // Cascade
         }
         final @Nullable Component history = this.getHistory();
 
@@ -62,30 +66,26 @@ public class PaperVersionFetcher implements VersionFetcher {
     private static Component getUpdateStatusMessage(final String repo, final ServerBuildInfo build) {
         //int distance = DISTANCE_ERROR; // Purpur - use field
 
-        final OptionalInt buildNumber = build.buildNumber();
-        if (buildNumber.isPresent()) {
-            distance = fetchDistanceFromSiteApi(build, buildNumber.getAsInt());
-        } else {
-            final Optional<String> gitBranch = build.gitBranch();
-            final Optional<String> gitCommit = build.gitCommit();
-            if (gitBranch.isPresent() && gitCommit.isPresent()) {
-                distance = fetchDistanceFromGitHub(repo, gitBranch.get(), gitCommit.get());
-            }
+        // Cascade start - only fetch from GitHub
+        final Optional<String> gitBranch = build.gitBranch();
+        final Optional<String> gitCommit = build.gitCommit();
+        if (gitBranch.isPresent() && gitCommit.isPresent()) {
+            distance = fetchDistanceFromGitHub(repo, gitBranch.get(), gitCommit.get());
         }
+        // Cascade end - only fetch from GitHub
 
+        // Cascade start - recolor
         return switch (distance) {
-            case DISTANCE_ERROR -> text("* Error obtaining version information", NamedTextColor.RED); // Purpur
-            case 0 -> text("* You are running the latest version", NamedTextColor.GREEN); // Purpur
-            case DISTANCE_UNKNOWN -> text("* Unknown version", NamedTextColor.YELLOW); // Purpur
-            default -> text("* You are " + distance + " version(s) behind", NamedTextColor.YELLOW) // Purpur
-                .append(Component.newline())
-                .append(text("Download the new version at: ")
-                    .append(text(DOWNLOAD_PAGE, NamedTextColor.GOLD)
-                        .hoverEvent(text("Click to open", NamedTextColor.WHITE))
-                        .clickEvent(ClickEvent.openUrl(DOWNLOAD_PAGE))));
+            case DISTANCE_ERROR -> text("* Error obtaining version information", Ctp.MAROON); // Purpur
+            case 0 -> text("* You are running the latest version", Ctp.GREEN); // Purpur
+            case DISTANCE_UNKNOWN -> text("* Unknown version", Ctp.YELLOW); // Purpur
+            default -> text("* You are " + distance + " version(s) behind", Ctp.YELLOW); // Purpur // Cascade
         };
+        // Cascade end - recolor
     }
 
+    // Cascade start - remove
+    /*
     private static int fetchDistanceFromSiteApi(final ServerBuildInfo build, final int jenkinsBuild) {
         try {
             try (final BufferedReader reader = Resources.asCharSource(
@@ -105,6 +105,8 @@ public class PaperVersionFetcher implements VersionFetcher {
             return DISTANCE_ERROR;
         }
     }
+     */
+    // Cascade end - remove
 
     // Contributed by Techcable <Techcable@outlook.com> in GH-65
     private static int fetchDistanceFromGitHub(final String repo, final String branch, final String hash) {
@@ -141,6 +143,6 @@ public class PaperVersionFetcher implements VersionFetcher {
             return null;
         }
 
-        return text("Previous: " + oldVersion, NamedTextColor.GRAY); // Purpur
+        return text("Previous: " + oldVersion, Ctp.SUBTEXT0); // Purpur // Cascade
     }
 }
diff --git a/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java b/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
index 3099c21ee589acf6edff5903a23673adf489024f..a2533934c9246e9978be250f8202a2ceaa814b52 100644
--- a/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
+++ b/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
@@ -21,7 +21,10 @@ public record ServerBuildInfoImpl(
     OptionalInt buildNumber,
     Instant buildTime,
     Optional<String> gitBranch,
-    Optional<String> gitCommit
+    Optional<String> gitCommit,
+    // Cascade start - add attributes
+    String cascadeVersion
+    // Cascade end - add attributes
 ) implements ServerBuildInfo {
     private static final String ATTRIBUTE_BRAND_ID = "Brand-Id";
     private static final String ATTRIBUTE_BRAND_NAME = "Brand-Name";
@@ -29,10 +32,14 @@ public record ServerBuildInfoImpl(
     private static final String ATTRIBUTE_BUILD_NUMBER = "Build-Number";
     private static final String ATTRIBUTE_GIT_BRANCH = "Git-Branch";
     private static final String ATTRIBUTE_GIT_COMMIT = "Git-Commit";
+    // Cascade start - add attributes
+    private static final String ATTRIBUTE_CASCADE_VERSION = "Cascade-Version";
+    // Cascade end - add attributes
 
     private static final String BRAND_PAPER_NAME = "Paper";
     private static final String BRAND_PUFFERFISH_NAME = "Pufferfish"; // Purpur
     private static final String BRAND_PURPUR_NAME = "Purpur"; // Purpur
+    private static final String BRAND_CASCADE_NAME = "Cascade"; // Cascade
 
     private static final String BUILD_DEV = "DEV";
 
@@ -44,9 +51,9 @@ public record ServerBuildInfoImpl(
         this(
             getManifestAttribute(manifest, ATTRIBUTE_BRAND_ID)
                 .map(Key::key)
-                .orElse(BRAND_PURPUR_ID), // Purpur
+                .orElse(BRAND_CASCADE_ID), // Purpur // Cascade
             getManifestAttribute(manifest, ATTRIBUTE_BRAND_NAME)
-                .orElse(BRAND_PURPUR_NAME), // Purpur
+                .orElse(BRAND_CASCADE_NAME), // Purpur // Cascade
             SharedConstants.getCurrentVersion().getId(),
             SharedConstants.getCurrentVersion().getName(),
             getManifestAttribute(manifest, ATTRIBUTE_BUILD_NUMBER)
@@ -57,15 +64,26 @@ public record ServerBuildInfoImpl(
                 .map(Instant::parse)
                 .orElse(Main.BOOT_TIME),
             getManifestAttribute(manifest, ATTRIBUTE_GIT_BRANCH),
-            getManifestAttribute(manifest, ATTRIBUTE_GIT_COMMIT)
+            // Cascade start - add attributes
+            getManifestAttribute(manifest, ATTRIBUTE_GIT_COMMIT),
+            getManifestAttribute(manifest, ATTRIBUTE_CASCADE_VERSION).orElse("Unknown")
+            // Cascade end - add attributes
         );
     }
 
     @Override
     public boolean isBrandCompatible(final @NotNull Key brandId) {
-        return brandId.equals(this.brandId) || brandId.equals(BRAND_PAPER_ID) || brandId.equals(BRAND_PUFFERFISH_ID); // Purpur
+        return brandId.equals(this.brandId) || brandId.equals(BRAND_PAPER_ID) || brandId.equals(BRAND_PUFFERFISH_ID) || brandId.equals(BRAND_CASCADE_ID); // Purpur // Cascade
     }
 
+    // Cascade start - add attributes
+    @Override
+    @NotNull
+    public String cascadeVersion() {
+        return cascadeVersion;
+    }
+    // Cascade end - add attributes
+
     @Override
     public @NotNull String asString(final @NotNull StringRepresentation representation) {
         final StringBuilder sb = new StringBuilder();
diff --git a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
index 99597258e8e88cd9e2c901c4ac3ff7faeeabee2b..9a8071bbab4a66ccf422704848e31605cb28b3eb 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
@@ -11,7 +11,7 @@ public final class Versioning {
     public static String getBukkitVersion() {
         String result = "Unknown-Version";
 
-        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/org.purpurmc.purpur/purpur-api/pom.properties"); // Pufferfish // Purpur
+        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/ink.pmc.cascade/cascade-api/pom.properties"); // Pufferfish // Purpur // Cascade
         Properties properties = new Properties();
 
         if (stream != null) {
